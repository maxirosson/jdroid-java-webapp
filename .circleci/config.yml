version: 2

references:

  ## Workspace

  workspace: &workspace
               ~/workspace

  ## Cache

  cache_key: &cache_key
    key: cache-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}
  restore_cache: &restore_cache
    restore_cache:
      <<: *cache_key
  save_cache: &save_cache
    save_cache:
      <<: *cache_key
      paths:
        - ~/.gradle
        - ~/.m2

  ## Docker image configurations

  jdk_config: &jdk_config
    working_directory: *workspace
    docker:
      - image: circleci/openjdk:8-jdk
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.caching=false

jobs:
  build:
    <<: *jdk_config
    steps:
      - checkout

      - *restore_cache
      - run:
          name: Download dependencies
          command: ./gradlew dependencies --refresh-dependencies --stacktrace
      - *save_cache

      - run:
          name: Assembling
          command: ./gradlew assemble --refresh-dependencies --stacktrace --scan

      - run:
          name: Saving jars
          command: |
            mkdir -p ~/jars/
            find . -type f -regex ".*/build/libs/.*jar" -exec cp {} ~/jars/ \;
          when: always

      - store_artifacts:
          path: ~/jars
          destination: jars


  ktlint:
    <<: *jdk_config
    steps:
      - checkout
      - run: ./gradlew ktlint --stacktrace

  test:
    <<: *jdk_config
    steps:
      - checkout
      - *restore_cache

      - run:
          name: Verifying
          command: ./gradlew test --stacktrace

      - run:
          name: Saving test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: ./jdroid-java-webapp-core/build/reports/tests/test
          destination: jdroid-java-webapp-core/tests

      - store_artifacts:
          path: ./jdroid-java-webapp-facebook/build/reports/tests/test
          destination: jdroid-java-webapp-facebook/tests

      - store_artifacts:
          path: ./jdroid-java-webapp-firebase-firestore/build/reports/tests/test
          destination: jdroid-java-webapp-firebase-firestore/tests

      - store_artifacts:
          path: ./jdroid-java-webapp-firebase-admin/build/reports/tests/test
          destination: jdroid-java-webapp-firebase-admin/tests

      - store_artifacts:
          path: ./jdroid-java-webapp-firebase-fcm/build/reports/tests/test
          destination: jdroid-java-webapp-firebase-fcm/tests

      - store_artifacts:
          path: ./jdroid-java-webapp-push/build/reports/tests/test
          destination: jdroid-java-webapp-push/tests

      - store_artifacts:
          path: ./jdroid-java-webapp-sample/build/reports/tests/test
          destination: jdroid-java-webapp-sample/tests

      - store_artifacts:
          path: ./jdroid-java-webapp-twitter/build/reports/tests/test
          destination: jdroid-java-webapp-twitter/tests

  publish:
    <<: *jdk_config
    steps:
      - checkout
      - *restore_cache

      - run:
          name: Uploading to Nexus Sonatype
          command: ./gradlew publish -PLOCAL_UPLOAD=false --stacktrace

  upgradeDependencies:
    <<: *jdk_config
    steps:
      - checkout
      - run:
          name: Upgrade Dependencies
          command: ./gradlew upgradeDependencies --stacktrace

workflows:
  version: 2
  commit:
    jobs:
      - ktlint
      - build
      - test:
          requires:
            - build
      - publish:
          requires:
            - test

  weekly:
    triggers:
      - schedule:
          cron: "0 0 * * 0"
          filters:
            branches:
              only:
                - master
    jobs:
      - upgradeDependencies