apply plugin: 'com.jdroidtools.java.library'
apply from: "$rootDir/dependencies.gradle"

ext.PROJECT_NAME = 'Jdroid Java Web App'
description = 'Jdroid library for Java Web apps'

configurations.all {
	// check for updates every build
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

buildscript {
	apply from: "$rootDir/build_dependencies.gradle"
	dependencies {
		classpath(libs.jdroid_gradle_java_plugin)
	}
}

dependencies {

	// Jdroid dependencies

	if (jdroid.propertyResolver.getBooleanProp("JDROID_JAVA_AS_PROJECT_DEPENDENCY", false)) {
		api project(":jdroid-java-core")
		api project(":jdroid-java-remote-config")
	} else {
		api(libs.jdroid_java_core)
		api(libs.jdroid_java_remote_config)
	}

	if (jdroid.propertyResolver.getBooleanProp("JDROID_JAVA_HTTP_AS_PROJECT_DEPENDENCY", false)) {
		api project(":jdroid-java-http-core")
	} else {
		api (libs.jdroid_java_http) {
			exclude module: 'jdroid-java-core'
		}
	}

	implementation(libs.sentry)

	// Logging
	implementation(libs.log4j)
	api(libs.slf4j)

	api(libs.spring_core)
	api(libs.spring_web)
	api(libs.spring_webmvc)
	api(libs.spring_context_support)

	// TODO Remove these dependencies, and replace MappingJackson2HttpMessageConverter by a GsonHttpMessageConverter on Spring 4.1
	api(libs.jackson_core)
	api(libs.jackson_databind)
	api(libs.jackson_annotations)

	api(libs.servlet_api)

	api(libs.json)

	// Testing
	testImplementation(libs.testng)
	testImplementation(libs.mockito)
	testImplementation(libs.commons_beanutils)
}

test {
	useTestNG {
	}
}
