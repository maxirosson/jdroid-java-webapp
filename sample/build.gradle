apply plugin: 'com.jdroid.java.webapp'

description = 'Jdroid Sample Server'

configurations.all {
	// check for updates every build
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

buildscript {
	dependencies {
		classpath 'com.jdroidframework:jdroid-gradle-plugin:' + JDROID_PLUGIN_VERSION
	}
}

dependencies {

	//compile 'com.jdroidframework:jdroid-java-webaapp:' + jdroidVersion
	compile project(':library')

	compile 'com.jdroidframework:jdroid-java-http-okhttp:0.9.6'
	compile 'com.jdroidframework:jdroid-java-firebase-database:0.9.6'

	compile 'com.firebase:firebase-token-generator:2.0.0'

	// Testing
	testCompile "org.testng:testng:6.8.21"
	testCompile "org.mockito:mockito-all:1.10.19"
}

// Generate the settings.properties
project.afterEvaluate {

	project.task('generateBuildConfigClass') << {
		File dir = new File("$projectDir/build/generated/com/jdroid/javaweb/sample/context")
		dir.mkdirs()
		File file = new File(dir, "BuildConfig.java")
		file.withWriter { out ->

			out.writeLine("package com.jdroid.javaweb.sample.context;")
			out.writeLine("")
			out.writeLine("public class BuildConfig {")
			jdroid.setBuildConfigString(out, 'APP_NAME', project.name)
			jdroid.setBuildConfigString(out, 'APP_VERSION', project.version)
			jdroid.setBuildConfigString(out, 'BUILD_TYPE')
			jdroid.setBuildConfigString(out, 'BUILD_TIME', jdroid.getBuildTime())
			jdroid.setBuildConfigString(out, 'GIT_BRANCH', jdroid.getGitBranch())
			jdroid.setBuildConfigString(out, 'GIT_SHA', jdroid.getGitSha())
			jdroid.setBuildConfigString(out, 'MIN_API_VERSION', '1.0')
			jdroid.setBuildConfigString(out, 'GOOGLE_SERVER_API_KEY')

			jdroid.setBuildConfigBoolean(out, 'HTTP_MOCK_ENABLED', false)
			jdroid.setBuildConfigInteger(out, 'HTTP_MOCK_SLEEP_DURATION', 10)

			jdroid.setBuildConfigString(out, 'ADMIN_TOKEN', 'admin')

			jdroid.setBuildConfigString(out, 'TWITTER_OAUTH_CONSUMER_KEY')
			jdroid.setBuildConfigString(out, 'TWITTER_OAUTH_CONSUMER_SECRET')
			jdroid.setBuildConfigString(out, 'TWITTER_OAUTH_ACCESS_TOKEN')
			jdroid.setBuildConfigString(out, 'TWITTER_OAUTH_ACCESS_TOKEN_SECRET')
			jdroid.setBuildConfigBoolean(out, 'TWITTER_ENABLED', false)


			jdroid.setBuildConfigString(out, 'FIREBASE_URL')
			jdroid.setBuildConfigString(out, 'FIREBASE_AUTH_TOKEN')

			jdroid.setBuildConfigBoolean(out, 'ROLLBAR_ENABLED', false)
			jdroid.setBuildConfigString(out, 'ROLLBAR_ACCESS_TOKEN')
			out.writeLine("}")
		}
	}

	project.tasks.'compileJava'.dependsOn 'generateBuildConfigClass'
}

test {
	useTestNG {
	}
}

// https://blog.openshift.com/run-gradle-builds-on-openshift/
war {
	archiveName = 'ROOT.war'
//	destinationDir = file('webapps')
}

