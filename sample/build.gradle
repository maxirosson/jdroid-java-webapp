apply plugin: 'com.jdroid.java.webapp'

description = 'Jdroid Sample Server'

configurations.all {
	// check for updates every build
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

buildscript {
	dependencies {
		classpath 'com.jdroidframework:jdroid-gradle-plugin:'  + jdroidVersion
	}
}

dependencies {

	//compile 'com.jdroidframework:jdroid-java-webaapp:' + jdroidVersion
	compile project(':library')

	compile 'com.jdroidframework:jdroid-java-http-okhttp:' + jdroidVersion
	compile 'com.jdroidframework:jdroid-java-firebase-database:' + jdroidVersion

	compile 'com.firebase:firebase-token-generator:2.0.0'

	// Testing
	testCompile "org.testng:testng:6.8.21"
	testCompile "org.mockito:mockito-all:1.10.19"
}


// Generate the settings.properties
project.afterEvaluate {

	project.task('generateSettings') << {
		new File("$projectDir/src/main/resources/settings.properties").withWriter { out ->
			out.writeLine("appName=${project.name}")
			out.writeLine("appVersion=${project.version}")
			out.writeLine("buildType=${jdroid.getProp('BUILD_TYPE')}")
			out.writeLine("buildTime=${jdroid.getBuildTime()}")
			out.writeLine("gitBranch=${jdroid.getGitBranch()}")
			out.writeLine("gitSha=${jdroid.getGitSha()}")
			out.writeLine("minApiVersion=${jdroid.getProp('MIN_APP_VERSION', '1.0')}")
			out.writeLine("googleServerApiKey=${jdroid.getProp('GOOGLE_SERVER_API_KEY')}")
			out.writeLine("httpMockEnabled=${jdroid.getProp('HTTP_MOCK_ENABLED', false)}")
			out.writeLine("httpMockSleepDuration=${jdroid.getProp('HTTP_MOCK_SLEEP_DURATION', 10)}")
			out.writeLine("adminToken=${jdroid.getProp('ADMIN_TOKEN', 'admin')}")
			out.writeLine("rollBarEnabled=${jdroid.getProp('ROLLBAR_ENABLED', 'false')}")
			out.writeLine("rollBarAccessToken=${jdroid.getProp('ROLLBAR_ACCESS_TOKEN')}")

			// TODO Ignore the null keys, because they are generating "null" strings
			out.writeLine("twitterOAuthConsumerKey=${jdroid.getProp('TWITTER_OAUTH_CONSUMER_KEY')}")
			out.writeLine("twitterOAuthConsumerSecret=${jdroid.getProp('TWITTER_OAUTH_CONSUMER_SECRET')}")
			out.writeLine("twitterOAuthAccessToken=${jdroid.getProp('TWITTER_OAUTH_ACCESS_TOKEN')}")
			out.writeLine("twitterOAuthAccessTokenSecret=${jdroid.getProp('TWITTER_OAUTH_ACCESS_TOKEN_SECRET')}")
			out.writeLine("twitterEnabled=${jdroid.getProp('TWITTER_ENABLED', 'false')}")

			out.writeLine("firebaseUrl=${jdroid.getProp('FIREBASE_URL')}")
			out.writeLine("firebaseAuthToken=${jdroid.getProp('FIREBASE_AUTH_TOKEN')}")
		}
	}

	project.tasks.'processResources'.dependsOn 'generateSettings'
}

test {
	useTestNG {
	}
}

// https://blog.openshift.com/run-gradle-builds-on-openshift/
war {
	archiveName = 'ROOT.war'
//	destinationDir = file('webapps')
}

